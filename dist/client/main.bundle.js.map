{"version":3,"sources":["webpack:///./client/src/app/app.component.css","webpack:///./client/src/app/app.component.html","webpack:///./client/src async","webpack:///./client/src/app/config.service.ts","webpack:///./client/src/main.ts","webpack:///./client/src/app/app.component.ts","webpack:///./client/src/app/app.module.ts","webpack:///./client/src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/app/app.component.css\n// module id = 135\n// module chunks = 1","module.exports = \"<h1>\\n  {{title}} - {{name}}\\n</h1>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/app/app.component.html\n// module id = 137\n// module chunks = 1","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 49;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src async\n// module id = 49\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from \"rxjs/Observable\";\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\nimport { ISettings } from './config.model';\n\n@Injectable()\nexport class ConfigService {\n    public settings: ISettings;\n\n    constructor(private http: Http) { }\n\n    public load(): Promise<ISettings> {\n        return this.http.get('/api/config')\n            .map(res=> this.extractData(res))\n            .catch(this.handleError)\n            .toPromise();\n    }\n\n    private extractData(res: Response) {\n        let body = res.json();\n        this.settings = body;\n        return this.settings;\n    }\n    \n    private handleError(error: Response) {\n        return Observable.throw(error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/config.service.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/main.ts","import { Component } from '@angular/core';\nimport { ConfigService } from \"app/config.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public title = 'app works!';\n  public name: string;\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit() {\n    this.name = this.configService.settings.name;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule, Http, RequestOptions } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { ConfigService } from './config.service';\n\nexport function loadConfig(config: ConfigService) {\n  return () => config.load();\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [\n    ConfigService,\n    { provide: APP_INITIALIZER,\n    useFactory: loadConfig,\n    deps: [ConfigService],\n    multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/environments/environment.ts"],"sourceRoot":""}